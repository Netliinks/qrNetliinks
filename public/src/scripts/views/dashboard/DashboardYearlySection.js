//
//  DashboardYearlySection.ts
//
//  Generated by Poll Castillo on 23/02/2023.
//
import { createChartContext } from "./CreateChartContext.js";
import { getFilterEntityData, getEntityData, getUserInfo } from "../../endpoints.js";
export const renderYearlyChart = async () => {
    createChartContext('yearly');
    const chart = document.getElementById('yearly-chart');
    const _date = new Date();
    const _year = _date.getFullYear();
    let _userInfo = await getUserInfo();
    let currentUserInfo = await getEntityData('User', `${_userInfo.attributes.id}`);
    let raw = JSON.stringify({
        "filter": {
            "conditions": [
                {
                    "property": "customer.id",
                    "operator": "=",
                    "value": `${currentUserInfo.customer.id}`
                },
                {
                    "property": "creationYear",
                    "operator": "=",
                    "value": `${_year}`
                }
            ]
        }
    });
    let statistics = await getFilterEntityData("Statistics_", raw);
    let arryVisits = [];
    let arryMarcations = [];
    let contadorVisitas = {
        Ene: 0,
        Feb: 0,
        Mar: 0,
        Abr: 0,
        May: 0,
        Jun: 0,
        Jul: 0,
        Ago: 0,
        Sep: 0,
        Oct: 0,
        Nov: 0,
        Dic: 0
    };
    let contadorMarcaciones = {
        Ene: 0,
        Feb: 0,
        Mar: 0,
        Abr: 0,
        May: 0,
        Jun: 0,
        Jul: 0,
        Ago: 0,
        Sep: 0,
        Oct: 0,
        Nov: 0,
        Dic: 0
    };
    for (let i = 0; i < statistics.length; i++) {
        let data = statistics[i];
        switch (data.creationMonth) {
            case 1:
                contadorMarcaciones.Ene += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Ene += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 2:
                contadorMarcaciones.Feb += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Feb += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 3:
                contadorMarcaciones.Mar += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Mar += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 4:
                contadorMarcaciones.Abr += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Abr += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 5:
                contadorMarcaciones.May += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.May += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 6:
                contadorMarcaciones.Jun += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Jun += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 7:
                contadorMarcaciones.Jul += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Jul += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 8:
                contadorMarcaciones.Ago += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Ago += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 9:
                contadorMarcaciones.Sep += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Sep += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 10:
                contadorMarcaciones.Oct += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Oct += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 11:
                contadorMarcaciones.Nov += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Nov += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            case 12:
                contadorMarcaciones.Dic += data.totalIngressMarcation ? data.totalIngressMarcation : 0;
                contadorVisitas.Dic += ((data.totalIngressVisitGuard ? data.totalIngressVisitGuard : 0) + (data.totalIngressVisitClient ? data.totalIngressVisitClient : 0));
                break;
            default:
                break;
        }
    }
    arryVisits.push(contadorVisitas.Ene);
    arryVisits.push(contadorVisitas.Feb);
    arryVisits.push(contadorVisitas.Mar);
    arryVisits.push(contadorVisitas.Abr);
    arryVisits.push(contadorVisitas.May);
    arryVisits.push(contadorVisitas.Jun);
    arryVisits.push(contadorVisitas.Jul);
    arryVisits.push(contadorVisitas.Ago);
    arryVisits.push(contadorVisitas.Sep);
    arryVisits.push(contadorVisitas.Oct);
    arryVisits.push(contadorVisitas.Nov);
    arryVisits.push(contadorVisitas.Dic);
    arryMarcations.push(contadorMarcaciones.Ene);
    arryMarcations.push(contadorMarcaciones.Feb);
    arryMarcations.push(contadorMarcaciones.Mar);
    arryMarcations.push(contadorMarcaciones.Abr);
    arryMarcations.push(contadorMarcaciones.May);
    arryMarcations.push(contadorMarcaciones.Jun);
    arryMarcations.push(contadorMarcaciones.Jul);
    arryMarcations.push(contadorMarcaciones.Ago);
    arryMarcations.push(contadorMarcaciones.Sep);
    arryMarcations.push(contadorMarcaciones.Oct);
    arryMarcations.push(contadorMarcaciones.Nov);
    arryMarcations.push(contadorMarcaciones.Dic);
    // @ts-ignore
    new Chart(chart, {
        type: 'bar',
        data: {
            labels: [
                'Ene',
                'Feb',
                'Mar',
                'Abr',
                'May',
                'Jun',
                'Jul',
                'Ago',
                'Sep',
                'Oct',
                'Nov',
                'Dic'
            ],
            datasets: [
                {
                    label: 'Visitas',
                    data: arryVisits,
                    borderWidth: 1
                },
                {
                    label: 'Marcaciones',
                    data: arryMarcations,
                    borderWidth: 1
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom'
                },
                title: {
                    display: true,
                    text: `Registros de ${_year}`
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
};
